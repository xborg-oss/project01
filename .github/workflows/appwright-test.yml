name: AppWright Test

on:
  push:
    branches:
      - main

jobs:
  positive-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Docker Compose plugin
        run: |
          mkdir -p ~/.docker/cli-plugins/
          curl -SL https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version
      - name: Clean up Old containers
        run: docker compose down --volumes --remove-orphans || true
      - name: Start backend and agents
        run: |
          docker compose up -d --build --scale agent=3
          echo "Waiting for job-server to become healthy..."
          for i in {1..20}; do
            if curl -s http://localhost:8000/healthz | grep -q "ok"; then
              echo "job-server is up"
              break
            fi
            sleep 3
          done
          docker compose ps
          docker compose logs job-server
      - name: Install qgjob CLI
        run: pip install --upgrade qgjob==1.2.0
      - name: Submit passing test job
        id: submit_pass
        env:
          QGJOB_API_BASE_URL: http://localhost:8000
        run: |
          OUTPUT=$(qgjob submit --org-id=qualgent --app-version-id=abc123 --test=tests/pass.spec.ts --target=emulator --priority=2 --json)
          echo "$OUTPUT"
          JOB_ID=$(echo "$OUTPUT" | jq -r '.job_id')
          echo "job_id=$JOB_ID" >> "$GITHUB_OUTPUT"
      - name: Poll passing test status
        env:
          QGJOB_API_BASE_URL: http://localhost:8000
        run: |
          echo "Polling status for job: ${{ steps.submit_pass.outputs.job_id }}"
          qgjob status --job-id=${{ steps.submit_pass.outputs.job_id }} --poll
      - name: Cleanup containers
        if: always()
        run: |
          echo "Cleaning up containers..."
          docker compose down --volumes --remove-orphans

  negative-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Docker Compose plugin
        run: |
          mkdir -p ~/.docker/cli-plugins/
          curl -SL https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version
      - name: Clean up Old containers
        run: docker compose down --volumes --remove-orphans || true
      - name: Start backend and agents
        run: |
          docker compose up -d --build --scale agent=3
          echo "Waiting for job-server to become healthy..."
          for i in {1..20}; do
            if curl -s http://localhost:8000/healthz | grep -q "ok"; then
              echo "job-server is up"
              break
            fi
            sleep 3
          done
          docker compose ps
          docker compose logs job-server
      - name: Install qgjob CLI
        run: pip install --upgrade qgjob==1.2.0
      - name: Submit failing test job
        id: submit_fail
        env:
          QGJOB_API_BASE_URL: http://localhost:8000
        run: |
          OUTPUT=$(qgjob submit --org-id=qualgent --app-version-id=abc123 --test=tests/fail.spec.ts --target=emulator --priority=2 --json)
          echo "$OUTPUT"
          JOB_ID=$(echo "$OUTPUT" | jq -r '.job_id')
          echo "job_id=$JOB_ID" >> "$GITHUB_OUTPUT"
      - name: Poll failing test status
        env:
          QGJOB_API_BASE_URL: http://localhost:8000
        run: |
          echo "Polling status for job: ${{ steps.submit_fail.outputs.job_id }}"
          qgjob status --job-id=${{ steps.submit_fail.outputs.job_id }} --poll
      - name: Cleanup containers
        if: always()
        run: |
          echo "Cleaning up containers..."
          docker compose down --volumes --remove-orphans

  onboarding-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Docker Compose plugin
        run: |
          mkdir -p ~/.docker/cli-plugins/
          curl -SL https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version
      - name: Clean up Old containers
        run: docker compose down --volumes --remove-orphans || true
      - name: Start backend and agents
        run: |
          docker compose up -d --build --scale agent=3
          echo "Waiting for job-server to become healthy..."
          for i in {1..20}; do
            if curl -s http://localhost:8000/healthz | grep -q "ok"; then
              echo "job-server is up"
              break
            fi
            sleep 3
          done
          docker compose ps
          docker compose logs job-server
      - name: Install qgjob CLI
        run: pip install --upgrade qgjob==1.2.0
      - name: Submit onboarding test job
        id: submit_onboarding
        env:
          QGJOB_API_BASE_URL: http://localhost:8000
        run: |
          OUTPUT=$(qgjob submit --org-id=qualgent --app-version-id=xyz123 --test=tests/onboarding.spec.js --target=emulator --priority=2 --json)
          echo "$OUTPUT"
          JOB_ID=$(echo "$OUTPUT" | jq -r '.job_id')
          echo "job_id=$JOB_ID" >> "$GITHUB_OUTPUT"
      - name: Poll onboarding test status
        env:
          QGJOB_API_BASE_URL: http://localhost:8000
        run: |
          echo "Polling status for job: ${{ steps.submit_onboarding.outputs.job_id }}"
          qgjob status --job-id=${{ steps.submit_onboarding.outputs.job_id }} --poll
      - name: Cleanup containers
        if: always()
        run: |
          echo "Cleaning up containers..."
          docker compose down --volumes --remove-orphans
