name: AppWright Test

on:
  push:
    branches:
      - main

jobs:
  run-all-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Docker Compose plugin
        run: |
          mkdir -p ~/.docker/cli-plugins/
          curl -SL https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      - name: Clean up Old containers
        run: docker compose down --volumes --remove-orphans || true

      - name: Start backend and agents
        run: |
          docker compose up -d --build
          echo "Waiting for job-server to become healthy..."
          for i in {1..20}; do
            if curl -s http://localhost:8000/healthz | grep -q "ok"; then
              echo "job-server is up"
              break
            fi
            sleep 3
          done
          docker compose ps
          docker compose logs job-server

      - name: Install qgjob CLI
        run: pip install --upgrade qgjob==1.2.0

      - name: Submit all test jobs
        id: submit
        env:
          QGJOB_API_BASE_URL: http://localhost:8000
        run: |
          JOB_IDS=""
          declare -a TESTS=(tests/pass.spec.ts tests/fail.spec.ts tests/onboarding.spec.js)
          declare -a APP_VERSIONS=(abc123 abc123 xyz123)
          for i in ${!TESTS[@]}; do
            TEST=${TESTS[$i]}
            APP_VERSION_ID=${APP_VERSIONS[$i]}
            OUTPUT=$(qgjob submit --org-id=qualgent --app-version-id=$APP_VERSION_ID --test=$TEST --target=emulator --priority=2 --json)
            echo "$OUTPUT"
            JOB_ID=$(echo "$OUTPUT" | jq -r '.job_id')
            JOB_IDS="$JOB_IDS $JOB_ID"
          done
          echo "job_ids=$JOB_IDS" >> "$GITHUB_OUTPUT"

      - name: Poll all test statuses
        env:
          QGJOB_API_BASE_URL: http://localhost:8000
        run: |
          set -e
          for JOB_ID in ${{ steps.submit.outputs.job_ids }}; do
            echo "Polling status for job: $JOB_ID"
            qgjob status --job-id=$JOB_ID --poll
          done

      - name: Cleanup containers
        if: always()
        run: |
          echo "Cleaning up containers..."
          docker compose down --volumes --remove-orphans
